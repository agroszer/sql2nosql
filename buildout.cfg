[buildout]
extends = versions.cfg
develop = .

parts =
  test

versions = versions

extensions = buildout-versions lovely.buildouthttp
buildout_versions_file = versions.cfg
# we're pinning all the versions, so there's no point in looking
# for new packages out there
newest = false

include-site-packages = false

# helps debugging
unzip = true

[test]
recipe = zc.recipe.testrunner
# [test] are extras_require from setup.py
eggs = sql2nosql [test]
defaults = ['--tests-pattern', '^f?tests$$', '-v']
initialization =
  # monkey-patch the standard traceback method to show extra information
  from zope.exceptions import exceptionformatter
  import traceback
  traceback.format_exception = exceptionformatter.format_exception
  traceback.print_exception = exceptionformatter.print_exception

[coverage]
recipe = z3c.recipe.scripts
eggs = coverage

[coverage-test]
recipe = zc.recipe.testrunner
eggs = sql2nosql [test]
defaults = ['--tests-pattern', '^f?tests$$', '-v']
initialization =
  # haaaaack because zc.testrunner 1.4.0 produces an _insane_ bin/test
  # that cannot be run with bin/coverage run bin/test, or even
  # bin/python bin/test
  import coverage, atexit, sys
  c = coverage.coverage(data_file='../../../.coverage',
                        branch=True,
                        cover_pylib=False,
                        source=['star'])
  def _when_done(c=c): c.stop(), c.save()
  atexit.register(_when_done)
  if '--append-coverage' in sys.argv: sys.argv.remove('--append-coverage'), c.load()
  c.start()
  # do this after c.start()


[pyflakes]
recipe = zc.recipe.egg
eggs = pyflakes
scripts = pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main
initialization = if not sys.argv[1:]: sys.argv[1:] = ["${buildout:directory}"]

